* 
{
  font-family: 'SUSE',  sans-serif;
}


canvas{
  filter:blur(5px)
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background: linear-gradient(to bottom, #0f2027, #203a43, #2c5364); 
  background-repeat: no-repeat;
  background-size: 100vw 130vh;
  color: white;

}

.introFade {
  overflow: hidden;
  animation: fadeBg 1s ease-in-out;
}

@keyframes fadeBg {
  0% {
   filter:brightness(0);
   filter:contrast(0);
  }
  100% { 
    filter: brightness(1.0);
    filter:contrast(1.0);
  }
}


section {
  width: 80vw;
  margin:5px;
  padding: 15px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
 
}

.heading{
font-size: 28px;
}

section:nth-of-type(odd){
  animation: fadeInLeft 1s ease-in-out;
}

section:nth-of-type(even){
  animation: fadeInRight 1s ease-in-out;
  text-align: right;
}

@keyframes fadeInLeft {
0% {
  opacity: 0;
  transform: translateX(-5vw);
}
50% {
  opacity: 1;
  transform: translateX(0.33vw);
}
100% {
  opacity: 1;
  transform: translateX(0);
}
}
@keyframes fadeInRight {
  0% {
    opacity: 0;
    transform: translateX(5vw);
  }
  50% {
    opacity: 1;
    transform: translateX(-0.33vw);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
section p {
  margin: 0;
  padding: 10px 0;
}
header {
  width: 100vw;
  padding-top: 10px;
  padding-bottom: 10px;
  text-align: center;
  font-size: 2em;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  50% {
    opacity: 1;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}




header span {
  display: inline-block;
  opacity: 0;
}

canvas {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 20px;

}

.grid-item {
  background: rgba(255, 255, 255, 0.1);
  padding: 20px;
  text-align: center;
  border-radius: 10px;
  cursor: pointer;
  color: white;
  transition: transform 0.5s, background 0.2s,color 0.2s;
}

.grid-item:hover {
  transform: scale(1.05);
  background: rgba(255, 255,255 , 0.9);
  color: black;
}

.grid-item.locked {
  transition: transform 0.2s, background 0.2s, color 0.2s;
}

.grid-item.locked:hover {
  transform: scale(1.05);
  background: rgba(0, 0, 0, 0.5);
  color: white;
}